# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Final_Project.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtWidgets import QGraphicsView

from Common_Processes import Common_Proc

from Clustering import Clustering
 
from Heuristics import Heuristics

class Ui_MainWindow(Clustering,Heuristics,object):
    
    def __init__(self):
        """
        Constructor of GUI

        Returns
        -------
        None.

        """
        super().__init__()
    
    def setupUi(self, MainWindow):
        """
        GUI

        Parameters
        ----------
        MainWindow : TYPE
            DESCRIPTION.

        Returns
        -------
        None.

        """
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1351, 761)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        
        #PUSH BUTTONS
        
        #BUTTON OPEN SOURCE 
        self.pushButton_Open_Source = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Open_Source.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Open_Source.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Open_Source.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../Lab_Final/open_source.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Open_Source.setIcon(icon)
        self.pushButton_Open_Source.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Open_Source.setObjectName("pushButton_Open_Source")
        self.pushButton_Open_Source.clicked.connect(lambda: Common_Proc.Open_File_Read_Text(self))
        
        self.horizontalLayout_5.addWidget(self.pushButton_Open_Source, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setMaximumSize(QtCore.QSize(16777215, 70))
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        
        #BUTTON INITIAL SAVE
        self.pushButton_Initial_Save = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_Initial_Save.setEnabled(False)
        self.pushButton_Initial_Save.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Save.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Save.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../Lab_Final/Save-PNG-Image.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Initial_Save.setIcon(icon1)
        self.pushButton_Initial_Save.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Initial_Save.setObjectName("pushButton_Initial_Save")
        
        
        self.horizontalLayout_4.addWidget(self.pushButton_Initial_Save)
        
        #BUTTON INITIAL EXPORT AS
        self.pushButton_Initial_Export_As = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_Initial_Export_As.setEnabled(False)
        self.pushButton_Initial_Export_As.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Export_As.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Export_As.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../Lab_Final/save_as.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Initial_Export_As.setIcon(icon2)
        self.pushButton_Initial_Export_As.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Initial_Export_As.setObjectName("pushButton_Initial_Export_As")
        
        
        self.horizontalLayout_4.addWidget(self.pushButton_Initial_Export_As)
        
        
        #BUTTON INITIAL CLEAR
        self.pushButton_Initial_Clear = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_Initial_Clear.setEnabled(False)
        self.pushButton_Initial_Clear.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Clear.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Clear.setText("")
        
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../Lab_Final/clear.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Initial_Clear.setIcon(icon3)
        self.pushButton_Initial_Clear.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Initial_Clear.setObjectName("pushButton_Initial_Clear")
        self.pushButton_Initial_Clear.clicked.connect(lambda: Common_Proc.clearInput(self))
        
        
        self.horizontalLayout_4.addWidget(self.pushButton_Initial_Clear)
        
        
        #BUTTON INITIAL UNDO
        self.pushButton_Initial_Undo = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_Initial_Undo.setEnabled(False)
        self.pushButton_Initial_Undo.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Undo.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Undo.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../Lab_Final/undo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Initial_Undo.setIcon(icon4)
        self.pushButton_Initial_Undo.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Initial_Undo.setObjectName("pushButton_Initial_Undo")
        
        
        self.horizontalLayout_4.addWidget(self.pushButton_Initial_Undo)
        
        
        #BUTTON INITIAL REDO
        self.pushButton_Initial_Redo = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_Initial_Redo.setEnabled(False)
        self.pushButton_Initial_Redo.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Redo.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Initial_Redo.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("../Lab_Final/redo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Initial_Redo.setIcon(icon5)
        self.pushButton_Initial_Redo.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Initial_Redo.setObjectName("pushButton_Initial_Redo")
        
        
        
        
        
        self.horizontalLayout_4.addWidget(self.pushButton_Initial_Redo, 0, QtCore.Qt.AlignLeft)
        self.horizontalLayout_5.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setMaximumSize(QtCore.QSize(16777215, 70))
        self.groupBox_2.setObjectName("groupBox_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        
        
        #BUTTON FINAL SAVE
        self.pushButton_Final_Save = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_Final_Save.setEnabled(False)
        self.pushButton_Final_Save.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Save.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Save.setText("")
        self.pushButton_Final_Save.setIcon(icon1)
        self.pushButton_Final_Save.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Final_Save.setObjectName("pushButton_Final_Save")
        
        
        self.horizontalLayout_3.addWidget(self.pushButton_Final_Save)
        
        
        #BUTTON FINAL EXPORT AS
        self.pushButton_Final_Export_As = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_Final_Export_As.setEnabled(False)
        self.pushButton_Final_Export_As.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Export_As.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Export_As.setText("")
        self.pushButton_Final_Export_As.setIcon(icon2)
        self.pushButton_Final_Export_As.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Final_Export_As.setObjectName("pushButton_Final_Export_As")
        
        
        self.horizontalLayout_3.addWidget(self.pushButton_Final_Export_As)
        
        
        #BUTTON FINAL CLEAR
        self.pushButton_Final_Clear = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_Final_Clear.setEnabled(False)
        self.pushButton_Final_Clear.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Clear.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Clear.setText("")
        self.pushButton_Final_Clear.setIcon(icon3)
        self.pushButton_Final_Clear.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Final_Clear.setObjectName("pushButton_Final_Clear")
        self.pushButton_Final_Clear.clicked.connect(lambda: Common_Proc.clearFinal(self))
        
        self.horizontalLayout_3.addWidget(self.pushButton_Final_Clear)
        
        
        #BUTTON FINAL UNDO
        self.pushButton_Final_Undo = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_Final_Undo.setEnabled(False)
        self.pushButton_Final_Undo.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Undo.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Undo.setText("")
        self.pushButton_Final_Undo.setIcon(icon4)
        self.pushButton_Final_Undo.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Final_Undo.setObjectName("pushButton_Final_Undo")
        self.pushButton_Final_Undo.clicked.connect(lambda: Common_Proc.undoFinalFunction(self))
        self.pushButton_Final_Undo.clicked.connect(lambda: Common_Proc.Show_Output(self))
        
        
        self.horizontalLayout_3.addWidget(self.pushButton_Final_Undo)
        
        
        #BUTTON FINAL REDO
        self.pushButton_Final_Redo = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_Final_Redo.setEnabled(False)
        self.pushButton_Final_Redo.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Redo.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Final_Redo.setText("")
        self.pushButton_Final_Redo.setIcon(icon5)
        self.pushButton_Final_Redo.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Final_Redo.setObjectName("pushButton_Final_Redo")
        self.pushButton_Final_Redo.clicked.connect(lambda: Common_Proc.redoFinalFunction(self))
        self.pushButton_Final_Redo.clicked.connect(lambda: Common_Proc.Show_Output(self))
        
        self.horizontalLayout_3.addWidget(self.pushButton_Final_Redo, 0, QtCore.Qt.AlignLeft)
        self.horizontalLayout_5.addWidget(self.groupBox_2)
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setMaximumSize(QtCore.QSize(16777215, 70))
        self.groupBox_3.setObjectName("groupBox_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBox_3)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        
        
        #BUTTON K MEANS
        self.pushButton_Cluster_K_Means = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_Cluster_K_Means.setEnabled(False)
        self.pushButton_Cluster_K_Means.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Cluster_K_Means.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Cluster_K_Means.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Cluster_K_Means.setObjectName("pushButton_Cluster_K_Means")
        self.pushButton_Cluster_K_Means.clicked.connect(lambda: Clustering.K_Means(self))
        self.pushButton_Cluster_K_Means.clicked.connect(lambda: Common_Proc.Show_Output(self))
        
        self.horizontalLayout_2.addWidget(self.pushButton_Cluster_K_Means)
        
        
        #BUTTON AFFINITY 
        self.pushButton_Cluster_Affinity_Propagation = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_Cluster_Affinity_Propagation.setEnabled(False)
        self.pushButton_Cluster_Affinity_Propagation.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Cluster_Affinity_Propagation.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Cluster_Affinity_Propagation.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Cluster_Affinity_Propagation.setObjectName("pushButton_Cluster_Affinity_Propagation")
        self.pushButton_Cluster_Affinity_Propagation.clicked.connect(lambda: Clustering.affinityPropagation(self))
        self.pushButton_Cluster_Affinity_Propagation.clicked.connect(lambda: Common_Proc.Show_Output(self))
        
        
        self.horizontalLayout_2.addWidget(self.pushButton_Cluster_Affinity_Propagation)
        
        
        #BUTTON MEAN SHIFT
        self.pushButton_Cluster_Mean_Shift = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_Cluster_Mean_Shift.setEnabled(False)
        self.pushButton_Cluster_Mean_Shift.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Cluster_Mean_Shift.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Cluster_Mean_Shift.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Cluster_Mean_Shift.setObjectName("pushButton_Cluster_Mean_Shift")
        self.pushButton_Cluster_Mean_Shift.clicked.connect(lambda: Clustering.Mean_Shift(self))
        self.pushButton_Cluster_Mean_Shift.clicked.connect(lambda: Common_Proc.Show_Output(self))
        
        self.horizontalLayout_2.addWidget(self.pushButton_Cluster_Mean_Shift)
        
        
        #BUTTON SPECTRAL CLUSTERING
        self.pushButton__Cluster_Spectral_Clustering = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton__Cluster_Spectral_Clustering.setEnabled(False)
        self.pushButton__Cluster_Spectral_Clustering.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton__Cluster_Spectral_Clustering.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton__Cluster_Spectral_Clustering.setIconSize(QtCore.QSize(35, 35))
        self.pushButton__Cluster_Spectral_Clustering.setObjectName("pushButton__Cluster_Spectral_Clustering")
        self.pushButton__Cluster_Spectral_Clustering.clicked.connect(lambda: Clustering.spectralClustering(self))
        self.pushButton__Cluster_Spectral_Clustering.clicked.connect(lambda: Common_Proc.Show_Output(self))
     
        
        self.horizontalLayout_2.addWidget(self.pushButton__Cluster_Spectral_Clustering)
        
        
        #BUTTON HIERARCHICAL
        self.pushButton__Cluster_Hierarchical_Clustering = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton__Cluster_Hierarchical_Clustering.setEnabled(False)
        self.pushButton__Cluster_Hierarchical_Clustering.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton__Cluster_Hierarchical_Clustering.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton__Cluster_Hierarchical_Clustering.setIconSize(QtCore.QSize(35, 35))
        self.pushButton__Cluster_Hierarchical_Clustering.setObjectName("pushButton__Cluster_Hierarchical_Clustering")
        self.pushButton__Cluster_Hierarchical_Clustering.clicked.connect(lambda: Clustering.hierarchicalClustering(self))
        self.pushButton__Cluster_Hierarchical_Clustering.clicked.connect(lambda: Common_Proc.Show_Output(self))
     
        
        self.horizontalLayout_2.addWidget(self.pushButton__Cluster_Hierarchical_Clustering, 0, QtCore.Qt.AlignLeft)
        
        
        #BUTTON DBSCAN
        self.pushButton__Cluster_DBSCAN = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton__Cluster_DBSCAN.setEnabled(False)
        self.pushButton__Cluster_DBSCAN.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton__Cluster_DBSCAN.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton__Cluster_DBSCAN.setIconSize(QtCore.QSize(35, 35))
        self.pushButton__Cluster_DBSCAN.setObjectName("pushButton__Cluster_DBSCAN")
        self.pushButton__Cluster_DBSCAN.clicked.connect(lambda: Clustering.DBSCAN(self))
        self.pushButton__Cluster_DBSCAN.clicked.connect(lambda: Common_Proc.Show_Output(self))
     
                
        
        self.horizontalLayout_2.addWidget(self.pushButton__Cluster_DBSCAN)
        self.horizontalLayout_5.addWidget(self.groupBox_3)
        self.groupBox_4 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_4.setMaximumSize(QtCore.QSize(16777215, 70))
        self.groupBox_4.setObjectName("groupBox_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox_4)
        self.horizontalLayout.setObjectName("horizontalLayout")
        
        
        #BUTTON HEURISTIC
        self.pushButton_Heuristic_Hill_Climbing = QtWidgets.QPushButton(self.groupBox_4)
        self.pushButton_Heuristic_Hill_Climbing.setEnabled(False)
        self.pushButton_Heuristic_Hill_Climbing.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Heuristic_Hill_Climbing.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Heuristic_Hill_Climbing.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Heuristic_Hill_Climbing.setObjectName("pushButton_Heuristic_Hill_Climbing")
        
        
        self.horizontalLayout.addWidget(self.pushButton_Heuristic_Hill_Climbing)
        self.pushButton_Heuristic_Simulated_Anneling = QtWidgets.QPushButton(self.groupBox_4)
        self.pushButton_Heuristic_Simulated_Anneling.setEnabled(False)
        self.pushButton_Heuristic_Simulated_Anneling.setMinimumSize(QtCore.QSize(40, 40))
        self.pushButton_Heuristic_Simulated_Anneling.setMaximumSize(QtCore.QSize(40, 40))
        self.pushButton_Heuristic_Simulated_Anneling.setIconSize(QtCore.QSize(35, 35))
        self.pushButton_Heuristic_Simulated_Anneling.setObjectName("pushButton_Heuristic_Simulated_Anneling")
        
        
        self.horizontalLayout.addWidget(self.pushButton_Heuristic_Simulated_Anneling, 0, QtCore.Qt.AlignLeft)
        self.horizontalLayout_5.addWidget(self.groupBox_4)
        self.gridLayout_3.addLayout(self.horizontalLayout_5, 0, 0, 1, 1)
        self.groupBox_7 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_7.setMinimumSize(QtCore.QSize(300, 0))
        self.groupBox_7.setObjectName("groupBox_7")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_7)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        
        
        #LABELS
        
        #LABEL HUB
        self.label_Hubs = QtWidgets.QLabel(self.groupBox_7)
        self.label_Hubs.setMinimumSize(QtCore.QSize(0, 20))
        self.label_Hubs.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_Hubs.setObjectName("label_Hubs")
        
        
        self.verticalLayout.addWidget(self.label_Hubs)
        
        
        #TEXT EDIT MANUAL HUBS
        self.textEdit_Manual_Hubs = QtWidgets.QTextEdit(self.groupBox_7)
        self.textEdit_Manual_Hubs.setMinimumSize(QtCore.QSize(0, 50))
        self.textEdit_Manual_Hubs.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textEdit_Manual_Hubs.setObjectName("textEdit_Manual_Hubs")
        
        
        self.verticalLayout.addWidget(self.textEdit_Manual_Hubs)
        self.verticalLayout_3.addLayout(self.verticalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        
        
        #LABEL NODES
        self.label_Nodes = QtWidgets.QLabel(self.groupBox_7)
        self.label_Nodes.setMinimumSize(QtCore.QSize(0, 20))
        self.label_Nodes.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_Nodes.setObjectName("label_Nodes")
        
        
        self.verticalLayout_2.addWidget(self.label_Nodes)
        
        #TEXT EDIT MANUAL NODES
        self.textEdit_Manual_Nodes = QtWidgets.QTextEdit(self.groupBox_7)
        self.textEdit_Manual_Nodes.setMinimumSize(QtCore.QSize(0, 90))
        self.textEdit_Manual_Nodes.setMaximumSize(QtCore.QSize(16777215, 90))
        self.textEdit_Manual_Nodes.setObjectName("textEdit_Manual_Nodes")
        
        
        self.verticalLayout_2.addWidget(self.textEdit_Manual_Nodes)
        self.verticalLayout_3.addLayout(self.verticalLayout_2)
        
        
        #BUTTON MANUAL RUN
        self.pushButton_Manual_RUN = QtWidgets.QPushButton(self.groupBox_7)
        self.pushButton_Manual_RUN.setMinimumSize(QtCore.QSize(0, 30))
        self.pushButton_Manual_RUN.setMaximumSize(QtCore.QSize(16777215, 30))
        self.pushButton_Manual_RUN.setSizeIncrement(QtCore.QSize(0, 0))
        self.pushButton_Manual_RUN.setObjectName("pushButton_Manual_RUN")
        
        
        self.verticalLayout_3.addWidget(self.pushButton_Manual_RUN)
        self.gridLayout.addLayout(self.verticalLayout_3, 0, 0, 1, 1)
        self.gridLayout_3.addWidget(self.groupBox_7, 0, 1, 2, 1)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.groupBox_5 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_5.setMinimumSize(QtCore.QSize(500, 410))
        self.groupBox_5.setObjectName("groupBox_5")
        
        
        #LABEL INITIAL SOLUTION
        self.label_Initial_Solution = QGraphicsView(self.groupBox_5)
        self.label_Initial_Solution.setGeometry(QtCore.QRect(30, 20, 450, 320))
        self.label_Initial_Solution.setMinimumSize(QtCore.QSize(450, 320))
        self.label_Initial_Solution.setMaximumSize(QtCore.QSize(450, 320))
        self.label_Initial_Solution.setObjectName("label_Initial_Solution")
        
        
        self.horizontalLayout_6.addWidget(self.groupBox_5)
        self.groupBox_6 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_6.setMinimumSize(QtCore.QSize(500, 410))
        self.groupBox_6.setObjectName("groupBox_6")
        
        
        #LABEL FINAL SOLUTION
        self.label_Final_Solution = QGraphicsView(self.groupBox_6)
        self.label_Final_Solution.setGeometry(QtCore.QRect(20, 20, 450, 320))
        self.label_Final_Solution.setMinimumSize(QtCore.QSize(450, 320))
        self.label_Final_Solution.setMaximumSize(QtCore.QSize(450, 320))
        self.label_Final_Solution.setObjectName("label_Final_Solution")
        
        
        self.horizontalLayout_6.addWidget(self.groupBox_6)
        self.gridLayout_3.addLayout(self.horizontalLayout_6, 1, 0, 2, 1)
        self.groupBox_8 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_8.setMinimumSize(QtCore.QSize(300, 0))
        self.groupBox_8.setObjectName("groupBox_8")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBox_8)
        self.gridLayout_4.setObjectName("gridLayout_4")
        
        
        #RESULTS TEXT BROWSER
        self.textBrowser_Results = QtWidgets.QTextBrowser(self.groupBox_8)
        self.textBrowser_Results.setObjectName("textBrowser_Results")
        self.gridLayout_4.addWidget(self.textBrowser_Results, 0, 0, 1, 1)
        self.gridLayout_3.addWidget(self.groupBox_8, 2, 1, 2, 1)
        self.groupBox_9 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_9.setMinimumSize(QtCore.QSize(0, 180))
        self.groupBox_9.setMaximumSize(QtCore.QSize(16777215, 180))
        self.groupBox_9.setObjectName("groupBox_9")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_9)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.textBrowser_Info = QtWidgets.QTextBrowser(self.groupBox_9)
        self.textBrowser_Info.setMinimumSize(QtCore.QSize(1000, 150))
        self.textBrowser_Info.setMaximumSize(QtCore.QSize(700, 150))
        self.textBrowser_Info.setSizeIncrement(QtCore.QSize(0, 0))
        self.textBrowser_Info.setObjectName("textBrowser_Info")
        
        
        self.gridLayout_2.addWidget(self.textBrowser_Info, 0, 0, 1, 1)
        self.gridLayout_3.addWidget(self.groupBox_9, 3, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        
        #MENUBAR
        
        
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1351, 26))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menuExport_As = QtWidgets.QMenu(self.menu_File)
        self.menuExport_As.setObjectName("menuExport_As")
        self.menu_Edit = QtWidgets.QMenu(self.menubar)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menuClear = QtWidgets.QMenu(self.menu_Edit)
        self.menuClear.setObjectName("menuClear")
        self.menuUndo = QtWidgets.QMenu(self.menu_Edit)
        self.menuUndo.setObjectName("menuUndo")
        self.menuRedo = QtWidgets.QMenu(self.menu_Edit)
        self.menuRedo.setObjectName("menuRedo")
        self.menuClustering = QtWidgets.QMenu(self.menubar)
        self.menuClustering.setObjectName("menuClustering")
        self.menuHeuristic = QtWidgets.QMenu(self.menubar)
        self.menuHeuristic.setObjectName("menuHeuristic")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        #ACTION OPEN DATA
        self.action_Open_Data = QtWidgets.QAction(MainWindow)
        self.action_Open_Data.setIcon(icon)
        self.action_Open_Data.setObjectName("action_Open_Data")
        self.action_Open_Data.triggered.connect(lambda: Common_Proc.Open_File_Read_Text(self))
        
        #ACTION SAVE INITIAL SOLUTION
        self.action_Save_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.action_Save_Initial_Solution.setEnabled(False)
        self.action_Save_Initial_Solution.setIcon(icon1)
        self.action_Save_Initial_Solution.setObjectName("action_Save_Initial_Solution")
        
        #ACTION SAVE FINAL SOLUTION
        self.action_Save_Final_Solution = QtWidgets.QAction(MainWindow)
        self.action_Save_Final_Solution.setEnabled(False)
        self.action_Save_Final_Solution.setIcon(icon1)
        self.action_Save_Final_Solution.setObjectName("action_Save_Final_Solution")
        
        #ACTION EXPOT AS INITIAL SOLUTION
        self.action_Export_As_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.action_Export_As_Initial_Solution.setEnabled(False)
        self.action_Export_As_Initial_Solution.setIcon(icon2)
        self.action_Export_As_Initial_Solution.setObjectName("action_Export_As_Initial_Solution")
        
        #ACTION EXPORT AS FINAL SOLUTION
        self.action_Export_As_Final_Solution = QtWidgets.QAction(MainWindow)
        self.action_Export_As_Final_Solution.setEnabled(False)
        self.action_Export_As_Final_Solution.setIcon(icon2)
        self.action_Export_As_Final_Solution.setObjectName("action_Export_As_Final_Solution")
        
        #ACTION EXIT
        self.action_Exit = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("../Lab_Final/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Exit.setIcon(icon6)
        self.action_Exit.setObjectName("action_Exit")
        self.action_Exit.triggered.connect(lambda: Common_Proc.closeApplication(self))
        
        #ACTION CLEAR INITIAL SOLUTION
        self.action_Clear_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.action_Clear_Initial_Solution.setEnabled(False)
        self.action_Clear_Initial_Solution.setIcon(icon3)
        self.action_Clear_Initial_Solution.setObjectName("action_Clear_Initial_Solution")
        self.action_Clear_Initial_Solution.triggered.connect(lambda: Common_Proc.clearInput(self))
        
        #ACTION CLEAR FINAL SOLUTION
        self.action_Clear_Final_Solution = QtWidgets.QAction(MainWindow)
        self.action_Clear_Final_Solution.setEnabled(False)
        self.action_Clear_Final_Solution.setIcon(icon3)
        self.action_Clear_Final_Solution.setObjectName("action_Clear_Final_Solution")
        self.action_Clear_Final_Solution.triggered.connect(lambda: Common_Proc.clearFinal(self))
        
        #ACTION K MEANS
        self.action_Clustering_K_Means = QtWidgets.QAction(MainWindow)
        self.action_Clustering_K_Means.setEnabled(False)
        self.action_Clustering_K_Means.setObjectName("action_Clustering_K_Means")
        self.action_Clustering_K_Means.triggered.connect(lambda: Clustering.K_Means(self))
        self.action_Clustering_K_Means.triggered.connect(lambda: Common_Proc.Show_Output(self))
        
        #ACTION AFFINITY PROP
        self.action_Clustering_Affinity_Propaganation = QtWidgets.QAction(MainWindow)
        self.action_Clustering_Affinity_Propaganation.setEnabled(False)
        self.action_Clustering_Affinity_Propaganation.setObjectName("action_Clustering_Affinity_Propaganation")
        self.action_Clustering_Affinity_Propaganation.triggered.connect(lambda: Clustering.affinityPropagation(self))
        self.action_Clustering_Affinity_Propaganation.triggered.connect(lambda: Common_Proc.Show_Output(self))
        
        #ACTION MEAN SHIFT
        self.action_Clustering_Mean_Shift = QtWidgets.QAction(MainWindow)
        self.action_Clustering_Mean_Shift.setEnabled(False)
        self.action_Clustering_Mean_Shift.setObjectName("action_Clustering_Mean_Shift")
        self.action_Clustering_Mean_Shift.triggered.connect(lambda: Clustering.Mean_Shift(self))
        self.action_Clustering_Mean_Shift.triggered.connect(lambda: Common_Proc.Show_Output(self))
        
        #ACTION SPECTRAL CLUSTERING
        self.action_Clustering_Spectral_Clustering = QtWidgets.QAction(MainWindow)
        self.action_Clustering_Spectral_Clustering.setEnabled(False)
        self.action_Clustering_Spectral_Clustering.setObjectName("action_Clustering_Spectral_Clustering")
        self.action_Clustering_Spectral_Clustering.triggered.connect(lambda: Clustering.spectralClustering(self))
        self.action_Clustering_Spectral_Clustering.triggered.connect(lambda: Common_Proc.Show_Output(self))
        
        #ACTION HIERARCHICAL CLUSTERING
        self.action_Clustering_Hierarchical_Clustering = QtWidgets.QAction(MainWindow)
        self.action_Clustering_Hierarchical_Clustering.setEnabled(False)
        self.action_Clustering_Hierarchical_Clustering.setObjectName("action_Clustering_Hierarchical_Clustering")
        self.action_Clustering_Hierarchical_Clustering.triggered.connect(lambda: Clustering.hierarchicalClustering(self))
        self.action_Clustering_Hierarchical_Clustering.triggered.connect(lambda: Common_Proc.Show_Output(self))
        
        #ACTION DBSCAN
        self.action_Clustering_DBSCAN = QtWidgets.QAction(MainWindow)
        self.action_Clustering_DBSCAN.setEnabled(False)
        self.action_Clustering_DBSCAN.setObjectName("action_Clustering_DBSCAN")
        self.action_Clustering_DBSCAN.triggered.connect(lambda: Clustering.DBSCAN(self))
        self.action_Clustering_DBSCAN.triggered.connect(lambda: Common_Proc.Show_Output(self))
        
        #ACTION HEURISTIC HILL CLIMBING
        self.action_Heuristic_Hill_Climbing = QtWidgets.QAction(MainWindow)
        self.action_Heuristic_Hill_Climbing.setEnabled(False)
        self.action_Heuristic_Hill_Climbing.setObjectName("action_Heuristic_Hill_Climbing")
        
        #ACTION SIMULATED ANNELING
        self.action_Heuristic_Simulated_Anneling = QtWidgets.QAction(MainWindow)
        self.action_Heuristic_Simulated_Anneling.setEnabled(False)
        self.action_Heuristic_Simulated_Anneling.setObjectName("action_Heuristic_Simulated_Anneling")
        
        #ACTION UNDO INITIAL SOLUTION
        self.action_Undo_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.action_Undo_Initial_Solution.setEnabled(False)
        self.action_Undo_Initial_Solution.setIcon(icon4)
        self.action_Undo_Initial_Solution.setObjectName("action_Undo_Initial_Solution")
        
        #ACTION UNDO FINAL SOLUTION
        self.action_Undo_Final_Solution = QtWidgets.QAction(MainWindow)
        self.action_Undo_Final_Solution.setEnabled(False)
        self.action_Undo_Final_Solution.setIcon(icon4)
        self.action_Undo_Final_Solution.setObjectName("action_Undo_Final_Solution")
        self.action_Undo_Final_Solution.triggered.connect(lambda: Common_Proc.undoFinalFunction(self))
        self.action_Undo_Final_Solution.triggered.connect(lambda: Common_Proc.Show_Output(self))
        
        #ACTION REDO INITIAL SOLUTION
        self.action_Redo_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.action_Redo_Initial_Solution.setEnabled(False)
        self.action_Redo_Initial_Solution.setIcon(icon5)
        self.action_Redo_Initial_Solution.setObjectName("action_Redo_Initial_Solution")
        
        #ACTION REDO FINAL SOLUTION
        self.action_Redo_Final_Solution = QtWidgets.QAction(MainWindow)
        self.action_Redo_Final_Solution.setEnabled(False)
        self.action_Redo_Final_Solution.setIcon(icon5)
        self.action_Redo_Final_Solution.setObjectName("action_Redo_Final_Solution")
        self.action_Redo_Final_Solution.triggered.connect(lambda: Common_Proc.redoFinalFunction(self))
        self.action_Redo_Final_Solution.triggered.connect(lambda: Common_Proc.Show_Output(self))
        
        self.menuExport_As.addAction(self.action_Export_As_Initial_Solution)
        self.menuExport_As.addAction(self.action_Export_As_Final_Solution)
        self.menu_File.addAction(self.action_Open_Data)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Save_Initial_Solution)
        self.menu_File.addAction(self.action_Save_Final_Solution)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.menuExport_As.menuAction())
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Exit)
        self.menuClear.addAction(self.action_Clear_Initial_Solution)
        self.menuClear.addAction(self.action_Clear_Final_Solution)
        self.menuUndo.addAction(self.action_Undo_Initial_Solution)
        self.menuUndo.addAction(self.action_Undo_Final_Solution)
        self.menuRedo.addAction(self.action_Redo_Initial_Solution)
        self.menuRedo.addAction(self.action_Redo_Final_Solution)
        self.menu_Edit.addAction(self.menuClear.menuAction())
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.menuUndo.menuAction())
        self.menu_Edit.addAction(self.menuRedo.menuAction())
        self.menuClustering.addAction(self.action_Clustering_K_Means)
        self.menuClustering.addAction(self.action_Clustering_Affinity_Propaganation)
        self.menuClustering.addAction(self.action_Clustering_Mean_Shift)
        self.menuClustering.addAction(self.action_Clustering_Spectral_Clustering)
        self.menuClustering.addAction(self.action_Clustering_Hierarchical_Clustering)
        self.menuClustering.addAction(self.action_Clustering_DBSCAN)
        self.menuHeuristic.addAction(self.action_Heuristic_Hill_Climbing)
        self.menuHeuristic.addAction(self.action_Heuristic_Simulated_Anneling)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Edit.menuAction())
        self.menubar.addAction(self.menuClustering.menuAction())
        self.menubar.addAction(self.menuHeuristic.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "Initial Solution"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Final Solution"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Cluster"))
        self.pushButton_Cluster_K_Means.setText(_translate("MainWindow", "K"))
        self.pushButton_Cluster_Affinity_Propagation.setText(_translate("MainWindow", "A"))
        self.pushButton_Cluster_Mean_Shift.setText(_translate("MainWindow", "M"))
        self.pushButton__Cluster_Spectral_Clustering.setText(_translate("MainWindow", "S"))
        self.pushButton__Cluster_Hierarchical_Clustering.setText(_translate("MainWindow", "H"))
        self.pushButton__Cluster_DBSCAN.setText(_translate("MainWindow", "D"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Heuristics"))
        self.pushButton_Heuristic_Hill_Climbing.setText(_translate("MainWindow", "H"))
        self.pushButton_Heuristic_Simulated_Anneling.setText(_translate("MainWindow", "S"))
        self.groupBox_7.setTitle(_translate("MainWindow", "Manual Solution"))
        self.label_Hubs.setText(_translate("MainWindow", "Hubs"))
        self.label_Nodes.setText(_translate("MainWindow", "Nodes"))
        self.pushButton_Manual_RUN.setText(_translate("MainWindow", "RUN"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Initial Solution"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Final Solution"))
        self.groupBox_8.setTitle(_translate("MainWindow", "Results"))
        self.groupBox_9.setTitle(_translate("MainWindow", "Info Panel"))
        self.menu_File.setTitle(_translate("MainWindow", "&File"))
        self.menuExport_As.setTitle(_translate("MainWindow", "Export As"))
        self.menu_Edit.setTitle(_translate("MainWindow", "&Edit"))
        self.menuClear.setTitle(_translate("MainWindow", "Clear"))
        self.menuUndo.setTitle(_translate("MainWindow", "Undo"))
        self.menuRedo.setTitle(_translate("MainWindow", "Redo"))
        self.menuClustering.setTitle(_translate("MainWindow", "&Clustering"))
        self.menuHeuristic.setTitle(_translate("MainWindow", "&Heuristic"))
        self.action_Open_Data.setText(_translate("MainWindow", "&Open Data"))
        self.action_Open_Data.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_Save_Initial_Solution.setText(_translate("MainWindow", "&Save Initial Solution"))
        self.action_Save_Initial_Solution.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_Save_Final_Solution.setText(_translate("MainWindow", "&Save Final Solution"))
        self.action_Export_As_Initial_Solution.setText(_translate("MainWindow", "&Initial Solution"))
        self.action_Export_As_Final_Solution.setText(_translate("MainWindow", "&Final Solution"))
        self.action_Exit.setText(_translate("MainWindow", "&Exit"))
        self.action_Exit.setShortcut(_translate("MainWindow", "Shift+F4"))
        self.action_Clear_Initial_Solution.setText(_translate("MainWindow", "&Initial Solution"))
        self.action_Clear_Final_Solution.setText(_translate("MainWindow", "&Final Solution"))
        self.action_Clustering_K_Means.setText(_translate("MainWindow", "&K-Means"))
        self.action_Clustering_K_Means.setShortcut(_translate("MainWindow", "Ctrl++"))
        self.action_Clustering_Affinity_Propaganation.setText(_translate("MainWindow", "&Affinity Propagation"))
        self.action_Clustering_Affinity_Propaganation.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.action_Clustering_Mean_Shift.setText(_translate("MainWindow", "&Mean-shift"))
        self.action_Clustering_Spectral_Clustering.setText(_translate("MainWindow", "&Spectral Clustering"))
        self.action_Clustering_Hierarchical_Clustering.setText(_translate("MainWindow", "&Hierarchical Clustering"))
        self.action_Clustering_DBSCAN.setText(_translate("MainWindow", "&DBSCAN"))
        self.action_Heuristic_Hill_Climbing.setText(_translate("MainWindow", "&Hill Climbing"))
        self.action_Heuristic_Hill_Climbing.setShortcut(_translate("MainWindow", "Shift+S"))
        self.action_Heuristic_Simulated_Anneling.setText(_translate("MainWindow", "&Simulated Anneling"))
        self.action_Heuristic_Simulated_Anneling.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.action_Undo_Initial_Solution.setText(_translate("MainWindow", "&Undo Initial Solution"))
        self.action_Undo_Final_Solution.setText(_translate("MainWindow", "&Undo Final Solution"))
        self.action_Redo_Initial_Solution.setText(_translate("MainWindow", "&Redo Initial Solution"))
        self.action_Redo_Final_Solution.setText(_translate("MainWindow", "&Redo Final Solution"))
